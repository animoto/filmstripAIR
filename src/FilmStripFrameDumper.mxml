<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute" creationComplete="go();"
	backgroundColor="0xFFFFFF"
	width="864" height="480">
	<mx:Script>
		<![CDATA[
			import com.animoto.filmstrip.FilmStrip;
			import com.animoto.filmstrip.output.FrameDumper;
			import mx.core.UIComponent;
			import mx.core.Application;
			
			// This is a VERY basic start for a frame-dumper utility in AIR.
			// For now manually change the settings below (read the comments)
			// be sure your class dispatches "starting" when the render's ready to go
			// and has a public property called filmStrip that exposes the FilmStrip.
			
			// Notes on creating the MP4 from frames in FilmStrip project > 'README FIRST.rtf'
			
			public var folderName:String = "dice_output_test"; // output folder name -- created in 'Documents/FilmStripOutput/'
			
			public var extension:String = ""; // output file type -- "jpg", "png", or "" (bitmapData)
											// jpg & png are erroring on load in FileSequencePlayer -- not sure why?
			
			public var filmStrip:FilmStrip;
			public var dumper:FrameDumper;

			public function go():void {
				var holder:UIComponent = new UIComponent();
				addChild(holder);
				var example:SplitScreenView = new A_Example3D(); // Project to render
				holder.addChild(example);
				example.addEventListener("starting", initDumper); // Project should dispatch "starting" when render is starting.
			}
			
			public function initDumper(event:Event):void {
				filmStrip = event.target.filmStrip, // for now project should expose the filmStrip publicly
				dumper = new FrameDumper(filmStrip, folderName, extension);
			}
		]]>
	</mx:Script>
</mx:WindowedApplication>
